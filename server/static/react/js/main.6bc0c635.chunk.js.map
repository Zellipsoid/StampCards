{"version":3,"sources":["components/Login.js","components/EmployeeView.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","visible","loading","username","password","confirm_password","showCreateNewAccount","showLogin","username_exists","invalid_login","validation_errors","birthDay","birthMonth","handleChange","evt","setState","defineProperty","target","name","value","handleDateChange","e","_ref","_this$setState2","toggleSignUp","movingToCreateAccount","setTimeout","bind","assertThisInitialized","login","socket","emit","create_account","length","birthday","concat","toString","messages","message_text","react_default","a","createElement","className","Message","warning","Header","timePicker","days","Array","fill","undefined","map","x","i","day","key","text","Menu","Item","header","position","Select","placeholder","options","compact","onChange","create","Input","fluid","type","Button","onClick","normal","on","console","log","_this$state","Container","Grid","Row","Transition","animation","duration","React","Component","CustomerInfo","Statistic","color","size","style","width","Value","number_of_stamps_added","Label","columns","Column","disabled","stamps_subtracted","add_a_stamp","EmployeeView","result","customer_info","show_scanner","show_customer_info","open_customer_info","close_customer_info","handleScan","data","username_to_retrieve","username_requesting","user_data","handleError","err","error","stamps","lib_default","delay","onError","onScan","Card","QRCode","require","Dashboard","rank","CustomerView","components_EmployeeView","margin","height","openSocket","App","authenticated","show_dashboard","open_dashboard","components_Login","components_Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gXAwReA,cA7Pb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAfRQ,MAAQ,CACNC,SAAS,EACTC,SAAS,EACTC,SAAU,GACVC,SAAU,GACVC,iBAAkB,GAClBC,sBAAsB,EACtBC,WAAW,EACXC,iBAAiB,EACjBC,eAAe,EACfC,mBAAmB,EACnBC,SAAU,GACVC,WAAY,IAEKnB,EAanBoB,aAAe,SAAAC,GAGbrB,EAAKsB,SAAS,CAAEL,mBAAmB,IACnCjB,EAAKsB,SAALrB,OAAAsB,EAAA,EAAAtB,CAAA,GAAiBoB,EAAIG,OAAOC,KAAOJ,EAAIG,OAAOE,SAjB7B1B,EAmBnB2B,iBAAmB,SAACC,EAADC,GAAA,IAAAC,EAAML,EAANI,EAAMJ,KAAMC,EAAZG,EAAYH,MAAZ,OAAwB1B,EAAKsB,UAALQ,EAAA,GAAA7B,OAAAsB,EAAA,EAAAtB,CAAA6B,EAAiBL,EAAOC,GAAxBzB,OAAAsB,EAAA,EAAAtB,CAAA6B,EAAA,qBAAkD,GAAlDA,KAnBxB9B,EAoBnB+B,aAAe,WAEb,IAAIC,EADJhC,EAAKsB,SAAS,CAAEL,mBAAmB,IAGjCe,GADEhC,EAAKO,MAAMM,qBAKfb,EAAKsB,SAAS,CAAET,sBAAsB,EAAOC,WAAW,IACnDkB,EAQHC,WACE,WACE9B,KAAKmB,SAAS,CACZT,sBAAuBV,KAAKI,MAAMM,wBAEpCqB,KAJFjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAD,KAKA,KAbFiC,WACE,WACE9B,KAAKmB,SAAS,CAAER,WAAYX,KAAKI,MAAMO,aACvCoB,KAFFjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAD,KAGA,MAlCaA,EA+CnBoC,MAAQ,WACNpC,EAAKD,MAAMsC,OAAOC,KAAK,QAAS,CAC9B5B,SAAUV,EAAKO,MAAMG,SACrBC,SAAUX,EAAKO,MAAMI,YAlDNX,EAqDnBuC,eAAiB,WACXvC,EAAKO,MAAMI,WAAaX,EAAKO,MAAMK,kBAAoBZ,EAAKO,MAAMI,SAAS6B,OAAS,GAA6B,KAAxBxC,EAAKO,MAAMW,UAA6C,KAA1BlB,EAAKO,MAAMY,YAAqBnB,EAAKO,MAAMG,SAAS8B,OAAS,EACtLxC,EAAKsB,SAAS,CACZL,mBAAmB,EACnBF,iBAAiB,EACjBC,eAAe,KAGjBhB,EAAKsB,SAAS,CACZL,mBAAmB,EACnBF,iBAAiB,EACjBC,eAAe,IAEjBhB,EAAKD,MAAMsC,OAAOC,KAAK,iBAAkB,CACvC5B,SAAUV,EAAKO,MAAMG,SACrBC,SAAUX,EAAKO,MAAMI,SACrB8B,SAAQ,GAAAC,OACN1C,EAAKO,MAAMY,WAAa,GAAK,IAAM,IAD7BuB,OAEH1C,EAAKO,MAAMY,WAAWwB,SAAS,IAF5B,KAAAD,OAGN1C,EAAKO,MAAMW,SAAW,GAAK,IAAM,IAH3BwB,OAIH1C,EAAKO,MAAMW,SAASyB,SAAS,SAzErB3C,EA6EnB4C,SAAW,WACT,IAAIC,EAAe,GACnB,OAAK7C,EAAKO,MAAMU,mBAELjB,EAAKO,MAAMS,cACpB6B,EAAe,8CACN7C,EAAKO,MAAMI,WAAaX,EAAKO,MAAMK,iBAC5CiC,EAAe,yBACN7C,EAAKO,MAAMI,SAAS6B,OAAS,EACtCK,EAAe,2CACkB,KAAxB7C,EAAKO,MAAMW,UAA6C,KAA1BlB,EAAKO,MAAMY,WAClD0B,EAAe,gCACN7C,EAAKO,MAAMG,SAAS8B,OAAS,EACtCK,EAAe,2CACN7C,EAAKO,MAAMQ,kBACpB8B,EAAe,kCAGfC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,SAAO,GACdL,EAAAC,EAAAC,cAACE,EAAA,EAAQE,OAAT,KAAiBP,GACjBC,EAAAC,EAAAC,cAAA,kCAnBEF,EAAAC,EAAAC,cAAA,aAhFOhD,EAyGnBqD,WAAa,WACX,IAcMC,EAAO,IAAIC,MAAM,IAAIC,UAAKC,GAAWC,IAAI,SAACC,EAAGC,GACjD,IAAIC,EAAMD,EAAI,EACd,MAAO,CACLE,IAAKD,EACLE,KAAMF,EAAIlB,SAAS,IACnBjB,MAAOmC,KAGX,OACEf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAACgB,EAAA,EAAKC,KAAN,CAAWC,QAAM,GAAjB,YACApB,EAAAC,EAAAC,cAACgB,EAAA,EAAKA,KAAN,CAAWG,SAAS,SAClBrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACEC,YAAY,QACZC,QA7BK,CACb,CAAER,IAAK,MAAOC,KAAM,UAAWrC,MAAO,GACtC,CAAEoC,IAAK,MAAOC,KAAM,WAAYrC,MAAO,GACvC,CAAEoC,IAAK,MAAOC,KAAM,QAASrC,MAAO,GACpC,CAAEoC,IAAK,MAAOC,KAAM,QAASrC,MAAO,GACpC,CAAEoC,IAAK,MAAOC,KAAM,MAAOrC,MAAO,GAClC,CAAEoC,IAAK,MAAOC,KAAM,OAAQrC,MAAO,GACnC,CAAEoC,IAAK,MAAOC,KAAM,OAAQrC,MAAO,GACnC,CAAEoC,IAAK,MAAOC,KAAM,SAAUrC,MAAO,GACrC,CAAEoC,IAAK,MAAOC,KAAM,YAAarC,MAAO,GACxC,CAAEoC,IAAK,MAAOC,KAAM,UAAWrC,MAAO,IACtC,CAAEoC,IAAK,MAAOC,KAAM,WAAYrC,MAAO,IACvC,CAAEoC,IAAK,MAAOC,KAAM,WAAYrC,MAAO,KAkB/BD,KAAK,aACL8C,SAAO,EACPC,SAAUxE,EAAK2B,oBAGnBmB,EAAAC,EAAAC,cAACgB,EAAA,EAAKA,KAAN,CAAWG,SAAS,SAClBrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACEC,YAAY,MACZC,QAAShB,EACT7B,KAAK,WACL8C,SAAO,EACPC,SAAUxE,EAAK2B,uBAnJR3B,EA0JnByE,OAAS,WACP,OACE3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACEC,OAAK,EACLlD,KAAK,mBACL+C,SAAUxE,EAAKoB,aACfiD,YAAY,mBACZO,KAAK,eAIX9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOjD,EAAKqD,eAE7BP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQF,OAAK,EAACG,QAAS9E,EAAKuC,gBAA5B,oBAKJO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQF,OAAK,EAACG,QAAS9E,EAAK+B,cAA5B,qBApLS/B,EA4LnB+E,OAAS,WACP,OACEjC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQF,OAAK,EAACG,QAAS9E,EAAKoC,OAA5B,WAMJU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQF,OAAK,EAACG,QAAS9E,EAAK+B,cAA5B,eAvMR/B,EAAKoB,aAAepB,EAAKoB,aAAac,KAAlBjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAD,KACpBD,EAAMsC,OAAO2C,GAAG,iBAAkB,WAChCC,QAAQC,IAAI,mBACZlF,EAAKsB,SAAS,CAAEP,iBAAiB,EAAME,mBAAmB,MAE5DlB,EAAMsC,OAAO2C,GAAG,uBAAwB,WACtCC,QAAQC,IAAI,kBACZlF,EAAKsB,SAAS,CAAEN,eAAe,EAAMC,mBAAmB,MATzCjB,wEAkNV,IAAAmF,EACwDhF,KAAKI,MAA5DM,EADDsE,EACCtE,qBAAsBC,EADvBqE,EACuBrE,UAAWG,EADlCkE,EACkClE,kBACzC,OACE6B,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACqC,EAAA,EAAKC,IAAN,KACExC,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,OACLnD,KAAK,WACL+C,SAAUrE,KAAKiB,aACfiD,YAAY,eAIlBvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACqC,EAAA,EAAKC,IAAN,KACExC,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACEC,OAAK,EACLlD,KAAK,WACL+C,SAAUrE,KAAKiB,aACfiD,YAAY,WACZO,KAAK,eAIX9B,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAYC,UAAU,aAAaC,SAAU,IAAKjF,QAASM,GACxDX,KAAK4E,UAERjC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CACEC,UAAU,YACVC,SAAU,IACVjF,QAASK,GAERV,KAAKsE,UAER3B,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAYC,UAAU,OAAOC,SAAU,IAAKjF,QAASS,GAClDd,KAAKyC,oBAtQI8C,IAAMC,+CC+E1B,SAASC,EAAa7F,GAClB,OACI+C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAWC,MAAM,MAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,SAC/CnD,EAAAC,EAAAC,cAAC6C,EAAA,EAAUK,MAAX,KAAkBnG,EAAMoG,wBACxBrD,EAAAC,EAAAC,cAAC6C,EAAA,EAAUO,MAAX,wBAEJtD,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMgB,QAAS,GACXvD,EAAAC,EAAAC,cAACqC,EAAA,EAAKC,IAAN,KACIxC,EAAAC,EAAAC,cAACqC,EAAA,EAAKiB,OAAN,KACIxD,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQkB,KAAK,UAAUQ,SAAUxG,EAAMyG,kBAAmB7B,OAAK,GAA/D,oBAEJ7B,EAAAC,EAAAC,cAACqC,EAAA,EAAKiB,OAAN,KACIxD,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQkB,KAAK,UAAUjB,QAAS/E,EAAM0G,YAAa9B,OAAK,GAAxD,kBAIZ7B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQkB,KAAK,UAAUpB,OAAK,GAA5B,UAIG+B,kBA/FX,SAAAA,EAAY3G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuG,IACf1G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyG,GAAApG,KAAAH,KAAMJ,KATVQ,MAAQ,CACJoG,OAAQ,YACRC,cAAe,GACfC,cAAc,EACdC,oBAAoB,EACpBX,uBAAwB,EACxBK,mBAAmB,GAEJxG,EASnB+G,mBAAqB,WACjB/G,EAAKsB,SAAS,CACVuF,cAAc,IAElB5E,WACI,WACI9B,KAAKmB,SAAS,CACVwF,oBAAoB,KAE1B5E,KAJFjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAD,KAKA,MAnBWA,EAsBnBgH,oBAAsB,WAClBhH,EAAKsB,SAAS,CACVwF,oBAAoB,IAExB7E,WACI,WACI9B,KAAKmB,SAAS,CACVuF,cAAc,KAEpB3E,KAJFjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAD,KAKA,MAhCWA,EAmCnBiH,WAAa,SAAAC,GACLA,GAAQlH,EAAKO,MAAMsG,cACnB7G,EAAKD,MAAMsC,OAAOC,KAAK,yBAA0B,CAC7C6E,qBAAsBD,EACtBE,oBAAqBpH,EAAKD,MAAMsH,UAAU3G,YAvCnCV,EA2CnBsH,YAAc,SAAAC,GACVtC,QAAQuC,MAAMD,IA5CCvH,EA8CnByG,YAAc,WACVxB,QAAQC,IAAI,mBACZlF,EAAKsB,SAAS,CAAE6E,uBAAwBnG,EAAKO,MAAM4F,uBAAyB,KA9C5EpG,EAAMsC,OAAO2C,GAAG,gBAAiB,SAACkC,GAC9BlH,EAAKsB,SAAS,CAAEsF,cAAeM,EAAMf,uBAAwBe,EAAKO,SAElExC,QAAQC,IAAI,sBACZlF,EAAK+G,uBANM/G,wEAmDf,OACI8C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAYC,UAAU,OAAOC,SAAU,IAAKjF,QAASL,KAAKI,MAAMsG,cAC5D/D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CACI4E,MAAO,IACPC,QAASzH,KAAKmH,YACdO,OAAQ1H,KAAK8G,WACbjB,MAAO,CAAEC,MAAO,UAEpBnD,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAMnD,OAAK,EAACT,OAAO,uCAG3BpB,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAYC,UAAU,OAAOC,SAAU,IAAKjF,QAASL,KAAKI,MAAMuG,oBAC5DhE,EAAAC,EAAAC,cAAC4C,EAAD,CAAcgB,cAAezG,KAAKI,MAAMqG,cACpCJ,kBAAmBrG,KAAKI,MAAMiG,kBAC9BL,uBAAwBhG,KAAKI,MAAM4F,uBACnCM,YAAatG,KAAKsG,uBA7Efd,aCDvBoC,EAASC,EAAQ,KAuBNC,6MApBX1H,MAAQ,2EAKJ,OACIuC,EAAAC,EAAAC,cAAA,WACmC,OAA9B7C,KAAKJ,MAAMsH,UAAUa,KAClBpF,EAAAC,EAAAC,cAACmF,EAAD,CAAcd,UAAWlH,KAAKJ,MAAMsH,YAEpCvE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACoF,EAAD,CAAc/F,OAAQlC,KAAKJ,MAAMsC,OAAQgF,UAAWlH,KAAKJ,MAAMsH,qBAZ/D1B,aAuBxB,SAASwC,EAAapI,GAClB,OAEI+C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKgD,MAAO,CAAEC,MAAO,MAAOoC,OAAQ,WAChCvF,EAAAC,EAAAC,cAAC+E,EAAD,CAAQrG,MAAO3B,EAAMsH,UAAU3G,SAAUsF,MAAO,CAAEC,MAAO,OAAQqC,OAAQ,WAE7ExF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAMnD,OAAK,EAACT,OAAO,sDACnBpB,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAWC,MAAM,MAAMC,KAAK,OAAOC,MAAO,CAAEC,MAAO,SAC/CnD,EAAAC,EAAAC,cAAC6C,EAAA,EAAUK,MAAX,KAAkBnG,EAAMsH,UAAUI,QAClC3E,EAAAC,EAAAC,cAAC6C,EAAA,EAAUO,MAAX,qCC/BV/D,QAASkG,GAAW,+BAmDXC,cA3Cb,SAAAA,IAAc,IAAAxI,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqI,IACZxI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuI,GAAAlI,KAAAH,QANFI,MAAQ,CACNkI,eAAe,EACfC,gBAAgB,EAChBrB,UAAW,IAECrH,EASd2I,eAAiB,WACf3I,EAAKsB,SAAS,CACZmH,eAAe,IAEjBxG,WACE,WACE9B,KAAKmB,SAAS,CACZoH,gBAAgB,KAElBxG,KAJFjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAD,KAKA,MAjBFqC,EAAO2C,GAAG,4BAA6B,SAACkC,GACtCjC,QAAQC,IAAR,kBACAD,QAAQC,IAAIgC,GACZlH,EAAKO,MAAM8G,UAAYH,EACvBlH,EAAK2I,mBANK3I,wEA0BZ,OACE8C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAYC,UAAU,OAAOC,SAAU,IAAKjF,SAAUL,KAAKI,MAAMkI,eAC/D3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAC4F,EAAD,CAAOvG,OAAQA,MAGnBS,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAYC,UAAU,OAAOC,SAAU,IAAKjF,QAASL,KAAKI,MAAMmI,gBAC9D5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAC6F,EAAD,CAAWxG,OAAQA,EAAQgF,UAAWlH,KAAKI,MAAM8G,sBAzC3C1B,aCDEmD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtG,EAAAC,EAAAC,cAACqG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"js/main.6bc0c635.chunk.js","sourcesContent":["import React from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport {\n  Button,\n  Input,\n  Grid,\n  Transition,\n  Select,\n  Menu,\n  Container,\n  Message\n} from \"semantic-ui-react\";\nclass Login extends React.Component {\n  state = {\n    visible: true,\n    loading: false,\n    username: \"\",\n    password: \"\",\n    confirm_password: \"\",\n    showCreateNewAccount: false,\n    showLogin: true,\n    username_exists: false,\n    invalid_login: false,\n    validation_errors: false,\n    birthDay: \"\",\n    birthMonth: \"\"\n  };\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    props.socket.on(\"username_taken\", () => {\n      console.log(\"username taken!\");\n      this.setState({ username_exists: true, validation_errors: true })\n    });\n    props.socket.on(\"authentication_error\", () => {\n      console.log(\"invalid login!\");\n      this.setState({ invalid_login: true, validation_errors: true })\n    });\n  }\n\n  handleChange = evt => {\n    // check it out: we get the evt.target.name (which will be either \"email\" or \"password\")\n    // and use it to target the key on our `state` object with the same name, using bracket syntax\n    this.setState({ validation_errors: false });\n    this.setState({ [evt.target.name]: evt.target.value });\n  };\n  handleDateChange = (e, { name, value }) => this.setState({ [name]: value, validation_errors: false });\n  toggleSignUp = () => {\n    this.setState({ validation_errors: false });\n    let movingToCreateAccount;\n    if (this.state.showCreateNewAccount) {\n      movingToCreateAccount = false;\n    } else {\n      movingToCreateAccount = true;\n    }\n    this.setState({ showCreateNewAccount: false, showLogin: false });\n    if (!movingToCreateAccount) {\n      setTimeout(\n        function () {\n          this.setState({ showLogin: !this.state.showLogin });\n        }.bind(this),\n        500\n      );\n    } else {\n      setTimeout(\n        function () {\n          this.setState({\n            showCreateNewAccount: !this.state.showCreateNewAccount\n          });\n        }.bind(this),\n        500\n      );\n    }\n  };\n  login = () => {\n    this.props.socket.emit(\"login\", {\n      username: this.state.username,\n      password: this.state.password\n    });\n  };\n  create_account = () => {\n    if (this.state.password !== this.state.confirm_password || this.state.password.length < 6 || this.state.birthDay === \"\" || this.state.birthMonth === \"\" || this.state.username.length < 4) {\n      this.setState({\n        validation_errors: true,\n        username_exists: false,\n        invalid_login: false\n      });\n    } else {\n      this.setState({\n        validation_errors: false,\n        username_exists: false,\n        invalid_login: false\n      });\n      this.props.socket.emit(\"create_account\", {\n        username: this.state.username,\n        password: this.state.password,\n        birthday: `${\n          this.state.birthMonth < 10 ? \"0\" : \"\"\n          }${this.state.birthMonth.toString(10)}-${\n          this.state.birthDay < 10 ? \"0\" : \"\"\n          }${this.state.birthDay.toString(10)}`\n      });\n    }\n  };\n  messages = () => {\n    let message_text = \"\";\n    if (!this.state.validation_errors) {\n      return (<div></div>);\n    } else if (this.state.invalid_login) {\n      message_text = \"Your username or password is not recognized\";\n    } else if (this.state.password !== this.state.confirm_password) {\n      message_text = \"Passwords do not match\";\n    } else if (this.state.password.length < 6) {\n      message_text = \"Password must have at least 6 characters\";\n    } else if (this.state.birthDay === \"\" || this.state.birthMonth === \"\") {\n      message_text = \"Please enter a valid birthday\";\n    } else if (this.state.username.length < 4) {\n      message_text = \"Username must have at least 4 characters\";\n    } else if (this.state.username_exists) {\n      message_text = \"This username is already taken\";\n    }\n    return (\n      <div className=\"niceMargins\">\n        <div className=\"row\">\n          <Message warning>\n            <Message.Header>{message_text}</Message.Header>\n            <p>Please try again.</p>\n          </Message>\n        </div>\n      </div>\n    );\n  };\n  timePicker = () => {\n    const months = [\n      { key: \"Jan\", text: \"January\", value: 1 },\n      { key: \"Feb\", text: \"February\", value: 2 },\n      { key: \"Mar\", text: \"March\", value: 3 },\n      { key: \"Apr\", text: \"April\", value: 4 },\n      { key: \"May\", text: \"May\", value: 5 },\n      { key: \"Jun\", text: \"June\", value: 6 },\n      { key: \"Jul\", text: \"July\", value: 7 },\n      { key: \"Aug\", text: \"August\", value: 8 },\n      { key: \"Sep\", text: \"September\", value: 9 },\n      { key: \"Oct\", text: \"October\", value: 10 },\n      { key: \"Nov\", text: \"November\", value: 11 },\n      { key: \"Dec\", text: \"December\", value: 12 }\n    ];\n    const days = new Array(31).fill(undefined).map((x, i) => {\n      let day = i + 1;\n      return {\n        key: day,\n        text: day.toString(10),\n        value: day\n      };\n    });\n    return (\n      <div>\n        <Menu>\n          <Menu.Item header>Birthday</Menu.Item>\n          <Menu.Menu position=\"right\">\n            <Select\n              placeholder=\"Month\"\n              options={months}\n              name=\"birthMonth\"\n              compact\n              onChange={this.handleDateChange}\n            />\n          </Menu.Menu>\n          <Menu.Menu position=\"right\">\n            <Select\n              placeholder=\"Day\"\n              options={days}\n              name=\"birthDay\"\n              compact\n              onChange={this.handleDateChange}\n            />\n          </Menu.Menu>\n        </Menu>\n      </div>\n    );\n  };\n  create = () => {\n    return (\n      <div>\n        <div className=\"niceMargins\">\n          <div className=\"row\">\n            <Input\n              fluid\n              name=\"confirm_password\"\n              onChange={this.handleChange}\n              placeholder=\"Confirm Password\"\n              type=\"password\"\n            />\n          </div>\n        </div>\n        <div className=\"niceMargins\">\n          <div className=\"row\">{this.timePicker()}</div>\n        </div>\n        <div className=\"niceMargins\">\n          <div className=\"row\">\n            <Button fluid onClick={this.create_account}>\n              Create Account\n            </Button>\n          </div>\n        </div>\n        <div className=\"niceMargins\">\n          <div className=\"row\">\n            <Button fluid onClick={this.toggleSignUp}>\n              Back to login\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  normal = () => {\n    return (\n      <div>\n        <div className=\"niceMargins\">\n          <div className=\"row\">\n            <Button fluid onClick={this.login}>\n              Login\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"niceMargins\">\n          <div className=\"row\">\n            <Button fluid onClick={this.toggleSignUp}>\n              Sign up\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    const { showCreateNewAccount, showLogin, validation_errors } = this.state;\n    return (\n      <Container>\n        <div className=\"niceMargins\">\n          <Grid.Row>\n            <Input\n              fluid\n              type=\"text\"\n              name=\"username\"\n              onChange={this.handleChange}\n              placeholder=\"Username\"\n            />\n          </Grid.Row>\n        </div>\n        <div className=\"niceMargins\">\n          <Grid.Row>\n            <Input\n              fluid\n              name=\"password\"\n              onChange={this.handleChange}\n              placeholder=\"Password\"\n              type=\"password\"\n            />\n          </Grid.Row>\n        </div>\n        <Transition animation=\"fade right\" duration={500} visible={showLogin}>\n          {this.normal()}\n        </Transition>\n        <Transition\n          animation=\"fade left\"\n          duration={500}\n          visible={showCreateNewAccount}\n        >\n          {this.create()}\n        </Transition>\n        <Transition animation=\"fade\" duration={500} visible={validation_errors}>\n          {this.messages()}\n        </Transition>\n      </Container>\n    );\n  }\n}\nexport default Login;\n","import React, { Component } from \"react\";\nimport QrReader from 'react-qr-reader'\nimport { Card, Statistic, Transition, Grid, Button } from 'semantic-ui-react'\nimport \"../App.css\";\n// import {\n//   Transition\n// } from \"semantic-ui-react\";\n\nclass EmployeeView extends Component {\n    state = {\n        result: 'no result',\n        customer_info: {},\n        show_scanner: true,\n        show_customer_info: false,\n        number_of_stamps_added: 0,\n        stamps_subtracted: false\n    }\n    constructor(props) {\n        super(props);\n        props.socket.on(\"customer_info\", (data) => {\n            this.setState({ customer_info: data, number_of_stamps_added: data.stamps })\n\n            console.log('got customer info!')\n            this.open_customer_info();\n        });\n    }\n    open_customer_info = () => {\n        this.setState({\n            show_scanner: false\n        });\n        setTimeout(\n            function () {\n                this.setState({\n                    show_customer_info: true\n                });\n            }.bind(this),\n            250\n        );\n    };\n    close_customer_info = () => {\n        this.setState({\n            show_customer_info: false\n        });\n        setTimeout(\n            function () {\n                this.setState({\n                    show_scanner: true\n                });\n            }.bind(this),\n            250\n        );\n    };\n    handleScan = data => {\n        if (data && this.state.show_scanner) {\n            this.props.socket.emit(\"retrieve_customer_data\", {\n                username_to_retrieve: data,\n                username_requesting: this.props.user_data.username\n            });\n        }\n    }\n    handleError = err => {\n        console.error(err)\n    }\n    add_a_stamp = () => {\n        console.log(\"Adding a stamp!\")\n        this.setState({ number_of_stamps_added: this.state.number_of_stamps_added + 1 })\n    }\n    render() {\n        return (\n            <div>\n                <Transition animation=\"fade\" duration={250} visible={this.state.show_scanner}>\n                    <div>\n                        <QrReader\n                            delay={300}\n                            onError={this.handleError}\n                            onScan={this.handleScan}\n                            style={{ width: '100%' }}\n                        />\n                        <Card fluid header=\"Aim this at a customer's QR code\" />\n                    </div>\n                </Transition>\n                <Transition animation=\"fade\" duration={250} visible={this.state.show_customer_info}>\n                    <CustomerInfo customer_info={this.state.customer_info}\n                        stamps_subtracted={this.state.stamps_subtracted}\n                        number_of_stamps_added={this.state.number_of_stamps_added}\n                        add_a_stamp={this.add_a_stamp} />\n                </Transition>\n            </div>\n        );\n    }\n}\nfunction CustomerInfo(props) {\n    return (\n        <div>\n            <Statistic color='red' size='huge' style={{ width: \"100%\" }}>\n                <Statistic.Value>{props.number_of_stamps_added}</Statistic.Value>\n                <Statistic.Label>Current Stamps</Statistic.Label>\n            </Statistic>\n            <Grid columns={2}>\n                <Grid.Row>\n                    <Grid.Column>\n                        <Button size='massive' disabled={props.stamps_subtracted} fluid>Redeem 7 Stamps</Button>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Button size='massive' onClick={props.add_a_stamp} fluid>Add a Stamp</Button>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            <Button size='massive' fluid>Apply</Button>\n        </div>\n    );\n}\nexport default EmployeeView;\n","import React, { Component } from \"react\";\nimport { Card, Statistic } from 'semantic-ui-react'\nimport \"../App.css\";\nimport EmployeeView from \"./EmployeeView\";\n// import {\n//   Transition\n// } from \"semantic-ui-react\";\nvar QRCode = require('qrcode.react');\n\nclass Dashboard extends Component {\n    state = {}\n    // constructor(props) {\n    //     super(props);\n    // }\n    render() {\n        return (\n            <div>\n                {this.props.user_data.rank === null ?\n                    <CustomerView user_data={this.props.user_data} />\n                    :\n                    <div>\n                        <EmployeeView socket={this.props.socket} user_data={this.props.user_data} />\n                    </div>\n                }\n            </div>\n\n        );\n    }\n}\n\nexport default Dashboard;\n\nfunction CustomerView(props) {\n    return (\n\n        <div>\n            <div style={{ width: '85%', margin: '0 auto' }}>\n                <QRCode value={props.user_data.username} style={{ width: '100%', height: 'auto' }} />\n            </div>\n            <Card fluid header=\"Have a cashier scan this to earn or redeem points\" />\n            <Statistic color='red' size='huge' style={{ width: \"100%\" }}>\n                <Statistic.Value>{props.user_data.stamps}</Statistic.Value>\n                <Statistic.Label>Stamps Earned</Statistic.Label>\n            </Statistic>\n        </div>\n    );\n}","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nimport Dashboard from \"./components/Dashboard\";\n// const io = require(\"socket.io-client\");\n// const socket = io.connect(\"https://zellipsoid.ngrok.io\");\nimport openSocket from \"socket.io-client\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport {\n  Transition\n} from \"semantic-ui-react\";\nconst socket = openSocket(\"https://zellipsoid.ngrok.io\");\n\nclass App extends Component {\n  state = {\n    authenticated: false,\n    show_dashboard: false,\n    user_data: {}\n  }\n  constructor() {\n    super();\n    socket.on(\"authentication_successful\", (data) => {\n      console.log(`User received:`);\n      console.log(data);\n      this.state.user_data = data;\n      this.open_dashboard();\n    });\n  }\n  open_dashboard = () => {\n    this.setState({\n      authenticated: true\n    });\n    setTimeout(\n      function () {\n        this.setState({\n          show_dashboard: true\n        });\n      }.bind(this),\n      500\n    );\n  };\n  // componentDidMount() {\n\n  // }\n  render() {\n    return (\n      <div>\n        <Transition animation=\"fade\" duration={500} visible={!this.state.authenticated}>\n          <div className=\"center\">\n            <Login socket={socket} />\n          </div>\n        </Transition>\n        <Transition animation=\"fade\" duration={500} visible={this.state.show_dashboard}>\n          <div className=\"center\">\n            <Dashboard socket={socket} user_data={this.state.user_data} />\n          </div>\n        </Transition>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}