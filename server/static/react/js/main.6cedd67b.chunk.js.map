{"version":3,"sources":["components/Login.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","visible","loading","username","password","confirm_password","showCreateNewAccount","showLogin","password_mismatch","password_too_short","invalid_login","username_exists","invalid_birthday","birthDay","birthMonth","handleChange","evt","setState","defineProperty","target","name","value","handleDateChange","e","_ref","toggleSignUp","movingToCreateAccount","reset_message_states","setTimeout","bind","assertThisInitialized","login","socket","emit","create_account","length","birthday","concat","toString","messages","message_text","react_default","a","createElement","className","Message","warning","Header","timePicker","days","Array","fill","undefined","map","x","i","day","key","text","Menu","Item","header","position","Select","placeholder","options","compact","onChange","create","Input","fluid","type","Button","onClick","normal","on","console","log","_this$state","Container","Grid","Row","Transition","animation","duration","React","Component","openSocket","App","str","data","components_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"js/main.6cedd67b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport {\n  Button,\n  Input,\n  Grid,\n  Transition,\n  Select,\n  Menu\n} from \"semantic-ui-react\";\nimport { Message } from \"semantic-ui-react\";\nimport { Container } from \"semantic-ui-react\";\nclass Login extends React.Component {\n  state = {\n    visible: true,\n    loading: false,\n    username: \"\",\n    password: \"\",\n    confirm_password: \"\",\n    showCreateNewAccount: false,\n    showLogin: true,\n    password_mismatch: false,\n    password_too_short: false,\n    invalid_login: false,\n    username_exists: false,\n    invalid_birthday: false,\n    birthDay: \"\",\n    birthMonth: \"\"\n  };\n  constructor(props) {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    props.socket.on(\"username_taken\", function() {\n      console.log(\"username taken!\");\n    });\n  }\n\n  handleChange = evt => {\n    // check it out: we get the evt.target.name (which will be either \"email\" or \"password\")\n    // and use it to target the key on our `state` object with the same name, using bracket syntax\n    this.setState({ [evt.target.name]: evt.target.value });\n  };\n  handleDateChange = (e, { name, value }) => this.setState({ [name]: value });\n  toggleSignUp = () => {\n    this.reset_message_states();\n    let movingToCreateAccount;\n    if (this.state.showCreateNewAccount) {\n      movingToCreateAccount = false;\n    } else {\n      movingToCreateAccount = true;\n    }\n    this.setState({ showCreateNewAccount: false, showLogin: false });\n    if (!movingToCreateAccount) {\n      setTimeout(\n        function() {\n          this.setState({ showLogin: !this.state.showLogin });\n        }.bind(this),\n        500\n      );\n    } else {\n      setTimeout(\n        function() {\n          this.setState({\n            showCreateNewAccount: !this.state.showCreateNewAccount\n          });\n        }.bind(this),\n        500\n      );\n    }\n  };\n  login = () => {\n    this.props.socket.emit(\"login\", {\n      username: this.state.username,\n      password: this.state.password\n    });\n  };\n  create_account = () => {\n    if (this.state.password !== this.state.confirm_password) {\n      this.setState({ password_mismatch: true, invalid_birthday: false });\n    } else if (this.state.password.length < 6) {\n      this.setState({\n        password_too_short: true,\n        password_mismatch: false,\n        invalid_birthday: false\n      });\n    } else if (this.state.birthDay === \"\" || this.state.birthMonth === \"\") {\n      this.setState({\n        invalid_birthday: true,\n        password_mismatch: false,\n        password_too_short: false\n      });\n    } else {\n      this.reset_message_states();\n      this.props.socket.emit(\"create_account\", {\n        username: this.state.username,\n        password: this.state.password,\n        birthday: `${\n          this.state.birthMonth < 10 ? \"0\" : \"\"\n        }${this.state.birthMonth.toString(10)}-${\n          this.state.birthDay < 10 ? \"0\" : \"\"\n        }${this.state.birthDay.toString(10)}`\n      });\n    }\n  };\n  messages = () => {\n    let message_text = \"\";\n    if (this.state.password_mismatch) {\n      message_text = \"Passwords do not match\";\n    } else if (this.state.password_too_short) {\n      message_text = \"Password must have at least 6 characters\";\n    } else if (this.state.invalid_birthday) {\n      message_text = \"Please enter a valid birthday\";\n    } else {\n      return;\n    }\n    return (\n      <div className=\"niceMargins\">\n        <div className=\"row\">\n          <Message warning>\n            <Message.Header>{message_text}</Message.Header>\n            <p>Please try again.</p>\n          </Message>\n        </div>\n      </div>\n    );\n  };\n  reset_message_states = () => {\n    this.setState({\n      password_mismatch: false,\n      password_too_short: false,\n      invalid_login: false,\n      username_exists: false\n    });\n  };\n  timePicker = () => {\n    const months = [\n      { key: \"Jan\", text: \"January\", value: 1 },\n      { key: \"Feb\", text: \"February\", value: 2 },\n      { key: \"Mar\", text: \"March\", value: 3 },\n      { key: \"Apr\", text: \"April\", value: 4 },\n      { key: \"May\", text: \"May\", value: 5 },\n      { key: \"Jun\", text: \"June\", value: 6 },\n      { key: \"Jul\", text: \"July\", value: 7 },\n      { key: \"Aug\", text: \"August\", value: 8 },\n      { key: \"Sep\", text: \"September\", value: 9 },\n      { key: \"Oct\", text: \"October\", value: 10 },\n      { key: \"Nov\", text: \"November\", value: 11 },\n      { key: \"Dec\", text: \"December\", value: 12 }\n    ];\n    const days = new Array(31).fill(undefined).map((x, i) => {\n      let day = i + 1;\n      return {\n        key: day,\n        text: day.toString(10),\n        value: day\n      };\n    });\n    return (\n      <div>\n        <Menu>\n          <Menu.Item header>Birthday</Menu.Item>\n          <Menu.Menu position=\"right\">\n            <Select\n              placeholder=\"Month\"\n              options={months}\n              name=\"birthMonth\"\n              compact\n              onChange={this.handleDateChange}\n            />\n          </Menu.Menu>\n          <Menu.Menu position=\"right\">\n            <Select\n              placeholder=\"Day\"\n              options={days}\n              name=\"birthDay\"\n              compact\n              onChange={this.handleDateChange}\n            />\n          </Menu.Menu>\n        </Menu>\n      </div>\n    );\n  };\n  create = () => {\n    return (\n      <div>\n        <div className=\"niceMargins\">\n          <div className=\"row\">\n            <Input\n              fluid\n              name=\"confirm_password\"\n              onChange={this.handleChange}\n              placeholder=\"Confirm Password\"\n              type=\"password\"\n            />\n          </div>\n        </div>\n        <div className=\"niceMargins\">\n          <div className=\"row\">{this.timePicker()}</div>\n        </div>\n        <div className=\"niceMargins\">\n          <div className=\"row\">\n            <Button fluid onClick={this.create_account}>\n              Create Account\n            </Button>\n          </div>\n        </div>\n        <div className=\"niceMargins\">\n          <div className=\"row\">\n            <Button fluid onClick={this.toggleSignUp}>\n              Back to login\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  normal = () => {\n    return (\n      <div>\n        <div className=\"niceMargins\">\n          <div className=\"row\">\n            <Button fluid onClick={this.login}>\n              Login\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"niceMargins\">\n          <div className=\"row\">\n            <Button fluid onClick={this.toggleSignUp}>\n              Sign up\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    const { showCreateNewAccount, showLogin } = this.state;\n    return (\n      <Container>\n        <div className=\"niceMargins\">\n          <Grid.Row>\n            <Input\n              fluid\n              type=\"text\"\n              name=\"username\"\n              onChange={this.handleChange}\n              placeholder=\"Username\"\n            />\n          </Grid.Row>\n        </div>\n        <div className=\"niceMargins\">\n          <Grid.Row>\n            <Input\n              fluid\n              name=\"password\"\n              onChange={this.handleChange}\n              placeholder=\"Password\"\n              type=\"password\"\n            />\n          </Grid.Row>\n        </div>\n        <Transition animation=\"fade right\" duration={500} visible={showLogin}>\n          {this.normal()}\n        </Transition>\n        <Transition\n          animation=\"fade left\"\n          duration={500}\n          visible={showCreateNewAccount}\n        >\n          {this.create()}\n        </Transition>\n        {this.messages()}\n      </Container>\n    );\n  }\n}\nexport default Login;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\n// const io = require(\"socket.io-client\");\n// const socket = io.connect(\"https://zellipsoid.ngrok.io\");\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket(\"https://zellipsoid.ngrok.io\");\n\nclass App extends Component {\n  constructor() {\n    super();\n    socket.on(\"userDataFromBackend\", function(str) {\n      console.log(\"Wooo!\");\n      console.log(str);\n    });\n    socket.on(\"logged_in\", function(data) {\n      console.log(`logging in as ${data}!`);\n    });\n  }\n  // componentDidMount() {\n\n  // }\n  render() {\n    return (\n      <div className=\"center\">\n        <Login socket={socket} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}