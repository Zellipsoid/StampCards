{"version":3,"sources":["components/Login.js","App.js","serviceWorker.js","index.js"],"names":["Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","visible","loading","username","password","confirm_password","showCreateNewAccount","showLogin","password_mismatch","password_too_short","invalid_login","username_exists","birthDay","birthMonth","handleChange","evt","setState","defineProperty","target","name","value","handleDateChange","e","_ref","toggleSignUp","movingToCreateAccount","reset_message_states","setTimeout","bind","assertThisInitialized","login","props","socket","emit","create_account","length","messages","message_text","react_default","a","createElement","className","Message","warning","Header","timePicker","days","Array","fill","undefined","map","x","i","day","key","text","toString","Menu","Item","header","position","Select","placeholder","options","compact","onChange","create","Input","fluid","type","Button","onClick","normal","_this$state","Container","Grid","Row","Transition","animation","duration","React","Component","openSocket","App","on","str","console","log","components_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"js/main.f10f8d76.chunk.js","sourcesContent":["import React from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport {\n  Button,\n  Input,\n  Grid,\n  Transition,\n  Select,\n  Menu\n} from \"semantic-ui-react\";\nimport { Message } from \"semantic-ui-react\";\nimport { Container } from \"semantic-ui-react\";\nclass Login extends React.Component {\n  state = {\n    visible: true,\n    loading: false,\n    username: \"\",\n    password: \"\",\n    confirm_password: \"\",\n    showCreateNewAccount: false,\n    showLogin: true,\n    password_mismatch: false,\n    password_too_short: false,\n    invalid_login: false,\n    username_exists: false,\n    birthDay: \"\",\n    birthMonth: \"\"\n  };\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = evt => {\n    // check it out: we get the evt.target.name (which will be either \"email\" or \"password\")\n    // and use it to target the key on our `state` object with the same name, using bracket syntax\n    this.setState({ [evt.target.name]: evt.target.value });\n  };\n  handleDateChange = (e, { name, value }) => this.setState({ [name]: value });\n  toggleSignUp = () => {\n    this.reset_message_states();\n    let movingToCreateAccount;\n    if (this.state.showCreateNewAccount) {\n      movingToCreateAccount = false;\n    } else {\n      movingToCreateAccount = true;\n    }\n    this.setState({ showCreateNewAccount: false, showLogin: false });\n    if (!movingToCreateAccount) {\n      setTimeout(\n        function() {\n          this.setState({ showLogin: !this.state.showLogin });\n        }.bind(this),\n        500\n      );\n    } else {\n      setTimeout(\n        function() {\n          this.setState({\n            showCreateNewAccount: !this.state.showCreateNewAccount\n          });\n        }.bind(this),\n        500\n      );\n    }\n  };\n  login = () => {\n    this.props.socket.emit(\"login\", {\n      username: this.state.username,\n      password: this.state.password\n    });\n  };\n  create_account = () => {\n    if (this.state.password !== this.state.confirm_password) {\n      this.setState({ password_mismatch: true });\n    } else if (this.state.password.length < 6) {\n      this.setState({ password_too_short: true, password_mismatch: false });\n    } else {\n      this.reset_message_states();\n      this.props.socket.emit(\"create_account\", {\n        username: this.state.username,\n        password: this.state.password\n      });\n    }\n  };\n  messages = () => {\n    let message_text = \"\";\n    if (this.state.password_mismatch) {\n      message_text = \"Passwords do not match\";\n    } else if (this.state.password_too_short) {\n      message_text = \"Password must have at least 6 characters\";\n    } else {\n      return;\n    }\n    return (\n      <div className=\"niceMargins\">\n        <div className=\"row\">\n          <Message warning>\n            <Message.Header>{message_text}</Message.Header>\n            <p>Please try again.</p>\n          </Message>\n        </div>\n      </div>\n    );\n  };\n  reset_message_states = () => {\n    this.setState({\n      password_mismatch: false,\n      password_too_short: false,\n      invalid_login: false,\n      username_exists: false\n    });\n  };\n  timePicker = () => {\n    const months = [\n      { key: \"Jan\", text: \"January\", value: 1 },\n      { key: \"Feb\", text: \"February\", value: 2 },\n      { key: \"Mar\", text: \"March\", value: 3 },\n      { key: \"Apr\", text: \"April\", value: 4 },\n      { key: \"May\", text: \"May\", value: 5 },\n      { key: \"Jun\", text: \"June\", value: 6 },\n      { key: \"Jul\", text: \"July\", value: 7 },\n      { key: \"Aug\", text: \"August\", value: 8 },\n      { key: \"Sep\", text: \"September\", value: 9 },\n      { key: \"Oct\", text: \"October\", value: 10 },\n      { key: \"Nov\", text: \"November\", value: 11 },\n      { key: \"Dec\", text: \"December\", value: 12 }\n    ];\n    const days = new Array(31).fill(undefined).map((x, i) => {\n      let day = i + 1;\n      return {\n        key: day,\n        text: day.toString(10),\n        value: day\n      };\n    });\n    return (\n      <div>\n        <Menu>\n          <Menu.Item header>Birthday</Menu.Item>\n          <Menu.Menu position=\"right\">\n            <Select\n              placeholder=\"Month\"\n              options={months}\n              name=\"birthMonth\"\n              compact\n              onChange={this.handleDateChange}\n            />\n          </Menu.Menu>\n          <Menu.Menu position=\"right\">\n            <Select\n              placeholder=\"Day\"\n              options={days}\n              name=\"birthDay\"\n              compact\n              onChange={this.handleDateChange}\n            />\n          </Menu.Menu>\n        </Menu>\n      </div>\n    );\n  };\n  create = () => {\n    return (\n      <div>\n        <div className=\"niceMargins\">\n          <div className=\"row\">\n            <Input\n              fluid\n              name=\"confirm_password\"\n              onChange={this.handleChange}\n              placeholder=\"Confirm Password\"\n              type=\"password\"\n            />\n          </div>\n        </div>\n        <div className=\"niceMargins\">\n          <div className=\"row\">{this.timePicker()}</div>\n        </div>\n        <div className=\"niceMargins\">\n          <div className=\"row\">\n            <Button fluid onClick={this.create_account}>\n              Create Account\n            </Button>\n          </div>\n        </div>\n        <div className=\"niceMargins\">\n          <div className=\"row\">\n            <Button fluid onClick={this.toggleSignUp}>\n              Back to login\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  normal = () => {\n    return (\n      <div>\n        <div className=\"niceMargins\">\n          <div className=\"row\">\n            <Button fluid onClick={this.login}>\n              Login\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"niceMargins\">\n          <div className=\"row\">\n            <Button fluid onClick={this.toggleSignUp}>\n              Sign up\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    const { showCreateNewAccount, showLogin } = this.state;\n    return (\n      <Container>\n        <div className=\"niceMargins\">\n          <Grid.Row>\n            <Input\n              fluid\n              type=\"text\"\n              name=\"username\"\n              onChange={this.handleChange}\n              placeholder=\"Username\"\n            />\n          </Grid.Row>\n        </div>\n        <div className=\"niceMargins\">\n          <Grid.Row>\n            <Input\n              fluid\n              name=\"password\"\n              onChange={this.handleChange}\n              placeholder=\"Password\"\n              type=\"password\"\n            />\n          </Grid.Row>\n        </div>\n        <Transition animation=\"fade right\" duration={500} visible={showLogin}>\n          {this.normal()}\n        </Transition>\n        <Transition\n          animation=\"fade left\"\n          duration={500}\n          visible={showCreateNewAccount}\n        >\n          {this.create()}\n        </Transition>\n        {this.messages()}\n      </Container>\n    );\n  }\n}\nexport default Login;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\n// const io = require(\"socket.io-client\");\n// const socket = io.connect(\"https://zellipsoid.ngrok.io\");\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket(\"https://zellipsoid.ngrok.io\");\n\nclass App extends Component {\n  constructor() {\n    super();\n    socket.on('userDataFromBackend', function (str) {\n      console.log(\"Wooo!\");\n      console.log(str);\n    });\n  }\n  // componentDidMount() {\n\n  // }\n  render() {\n    return (\n      <div className=\"center\">\n        <Login socket={socket} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}